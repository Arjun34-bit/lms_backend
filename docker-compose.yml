services:
  app:
    build: .
    container_name: nest-app
    command: npm run start:prod
    ports:
      - '8287:8287'
    depends_on:
      - mongo
      - redis
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/?authSource=admin&replicaSet=rs0
      - REDIS_HOST=redis
      - PORT=8287
    volumes:
      - .:/app
    restart: unless-stopped
  mongo:
    image: mongo:8.0
    container_name: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo_replica_set.key:/data/mongo_replica_set.key
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /data/mongo_replica_set.key
        chown 999:999 /data/mongo_replica_set.key
        exec docker-entrypoint.sh $$@
    command: 'mongod --bind_ip_all --replSet rs0 --keyFile /data/mongo_replica_set.key'

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - mongo

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: ['redis-server', '--appendonly', 'yes']
    restart: unless-stopped

volumes:
  redis_data:
    name: redis_data
    driver: local
  mongodb_data:
    name: mongodb_data
    driver: local
  mongodb_config:
    name: mongodb_config
    driver: local
