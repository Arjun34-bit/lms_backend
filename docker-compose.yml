version: '3.8'

services:
  mongo:
    image: mongo:8.0
    container_name: mongo1
    ports:
      - 27018:27017
    volumes:
      - /mongodb_data:/data/db
    command: "mongod --replSet rs0 --bind_ip_all"
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  mongodb_setup:
    image: mongo:8.0
    depends_on:
      mongo:
        condition: service_healthy
    restart: "no"
    command: >
      sh -c "sleep 10 &&
            mongosh --host mongo1:27017 --eval '
            var status = rs.status();
            if (!status || status.code == 94) { 
              rs.initiate({ 
                _id: \"rs0\", 
                members: [{ _id: 0, host: \"mongo1:27017\" }] 
              }); 
            } else { 
              print(\"Replica set already initialized.\"); 
            }'"

  redis_pcc:
    image: redis:6.2.6-alpine
    container_name: redis_pcc
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5


volumes:
  mongodb_data:
    driver: local
  redis_data:


